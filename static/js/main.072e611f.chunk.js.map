{"version":3,"sources":["logo.svg","theming/theme.js","utils/generalUtils.js","components/stage1/SelectorSet.js","components/Stage1.js","utils/sharedConstants.js","components/stage2/PieceBase.js","components/stage2/PieceEditor.js","components/stage2/TimelinePieceButtons.js","components/stage2/TimelinePiece.js","components/stage2/LeftPiece.js","components/stage2/RightPiece.js","components/stage2/TimeLine.js","components/Stage2.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","palette","primary","main","secondary","tertiary","neutral","theme","overrides","MuiIconButton","root","color","backgroundColor","margin","&:hover","MuiOutlinedInput","MuiInput","MuiTextField","& label.Mui-focused","& .MuiOutlinedInput-root","& fieldset","borderColor","&:hover fieldset","borderWidth","&.Mui-focused fieldset","MuiSlider","height","thumb","width","border","marginTop","marginLeft","&:focus,&:hover,&$active","boxShadow","active","valueLabel","left","track","borderRadius","mark","display","rail","MuiTypography","h5","responsiveFontSizes","createMuiTheme","mapNumericValueToRange","value","in_min","in_max","out_min","out_max","getColorCustomOpacityFromHSLA","opacity","arguments","length","undefined","regexResult","match","h","s","l","a","concat","SelectorSet","props","options","gradient","currentValue","onValueChange","spacing","label","react_default","createElement","className","Typography","id","variant","component","fontSize","map","option","index","_option$style","style","backgroundColorStyle","defaultStyle","Object","objectSpread","marginRight","selectedClass","key","onMouseUp","getOptionBoxes","Stage1","lineCount","lineColor","appMode","sharedSelectStyle","paddingLeft","paddingRight","Fragment","stage1_SelectorSet","window","localStorage","setItem","updater","shapeClasses","SQUARE","CORNER_UPPER_RIGHT","CORNER_LOWER_RIGHT","CORNER_UPPER_LEFT","CORNER_LOWER_LEFT","Modes","EDIT_MODE","IMAGE_MODE","VIEW_MODE","shapeNames","PieceBase","shape","onMouseOver","isStaticPiece","innerTextBorderColor","children","_props$textClassModif","textClassModifier","innerTextContent","onMouseOut","onMouseEnter","displayTextContent","image","shapeClassName","textLocationClass","textBorderClass","innerTextLocationClass","fillStyle","backgroundImageStyle","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","getFillStyle","borderColorStyle","PieceEditor","_ref","mode","content","handleChangeEvent","savedContent","savedLabel","savedImage","console","log","TextField","autoFocus","defaultValue","placeholder","inputProps","maxLength","onChange","marginBottom","multiline","rows","TimelinePieceButtons","hoverText","onModeChange","IconButton","Done","Image","Edit","TimeLinePiece","_props$style","_props$shape","cellId","_props$defaultState","defaultState","_useState","useState","_useState2","slicedToArray","modeValue","setMode","_useState3","getItem","_useState4","savedContentValue","setSavedContent","_useState5","_useState6","savedImageValue","setSavedImage","_useState7","_useState8","savedLabelValue","setSavedLabel","_useState9","_useState10","contentValue","setContent","_useState11","_useState12","imageValue","setImage","_useState13","_useState14","labelValue","setLabel","_useState15","_useState16","state","e","target","shouldDisplayTextContent","position","stage2_PieceBase","stage2_TimelinePieceButtons","newMode","wordBreak","stage2_PieceEditor","assign","LeftPiece","uncurved","TimelinePiece","upperCurve","lowerCurve","RightPiece","uncurvedTextBelow","TimeLine","lines","totalCells","i","cells","j","cellNum","pieceProps","element","stage2_LeftPiece","stage2_RightPiece","push","Stage2","_props$lineCount","_props$lineColor","_props$appMode","stage2_TimeLine","App","stage","setStage","parseInt","setLineCount","setlineColor","setAppMode","headerLogoClass","ThemeProvider","CssBaseline","src","logo","alt","components_Stage1","components_Stage2","Boolean","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.072e611f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.d9fac499.svg\";","import { createMuiTheme, responsiveFontSizes } from \"@material-ui/core/styles\";\n// import { blue, green } from \"@material-ui/core/colors\";\n\nconst palette = {\n  primary: {\n    main: \"hsla(210, 100%, 56%, 1)\"\n  },\n  secondary: {\n    main: \"hsla(144, 37%, 50%, 1)\"\n  },\n  tertiary: {\n    main: \"hsla(8, 100%, 66%, 1)\"\n  },\n  neutral: {\n    main: \"hsla(210, 20%, 56%, 1)\"\n  }\n};\nlet theme = {\n  palette,\n  overrides: {\n    MuiIconButton: {\n      root: {\n        color: \"white\",\n        backgroundColor: \"hsla(220, 13%, 18%, .5);\",\n        margin: \".25em\",\n        \"&:hover\": {\n          backgroundColor: \"hsla(220, 13%, 18%, .75);\"\n        }\n      }\n    },\n    MuiOutlinedInput: {\n      root: {\n        color: \"white\"\n      }\n    },\n    MuiInput: {\n      root: {\n        color: \"white\"\n      }\n    },\n    MuiTextField: {\n      root: {\n        color: \"white\",\n        \"& label.Mui-focused\": {\n          color: \"green\"\n        },\n        \"& .MuiOutlinedInput-root\": {\n          \"& fieldset\": {\n            borderColor: \"hsla(216, 10%, 67%, 1)\"\n          },\n          \"&:hover fieldset\": {\n            borderColor: \"hsla(216, 10%, 67%, 1)\",\n            borderWidth: 2\n          },\n          \"&.Mui-focused fieldset\": {\n            borderColor: \"hsla(216, 10%, 87%, 1)\"\n          }\n        }\n      }\n    },\n    MuiSlider: {\n      root: {\n        color: palette.secondary.main,\n        height: 8\n      },\n      thumb: {\n        height: 24,\n        width: 24,\n        backgroundColor: \"#fff\",\n        border: \"2px solid currentColor\",\n        marginTop: -8,\n        marginLeft: -12,\n        \"&:focus,&:hover,&$active\": {\n          boxShadow: \"inherit\"\n        }\n      },\n      active: {},\n      valueLabel: {\n        left: \"calc(-50% + 4px)\"\n      },\n      track: {\n        height: 8,\n        borderRadius: 4\n      },\n      mark: {\n        display: \"none\"\n      },\n      rail: {\n        height: 8,\n        borderRadius: 4\n      }\n    },\n    MuiTypography: {\n      h5: {\n        color: \"hsla(216, 30%, 67%, 1)\"\n      }\n    }\n  }\n};\n\ntheme = responsiveFontSizes(createMuiTheme(theme));\n\nexport default theme;\n","export function mapNumericValueToRange(\n  value,\n  in_min,\n  in_max,\n  out_min,\n  out_max\n) {\n  return ((value - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min;\n}\n\nexport function testForHSLAColorString(string) {\n  const regex = /hsla\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%,\\s*(\\d*(?:\\.\\d+)?)\\)/;\n  return string.match(regex);\n}\n\nexport function getColorCustomOpacityFromHSLA(color, opacity = 0) {\n  const regexResult = testForHSLAColorString(color);\n\n  if (regexResult) {\n    const h = regexResult[1] || 0;\n    const s = regexResult[2] || 50;\n    const l = regexResult[3] || 50;\n    const a = mapNumericValueToRange(opacity, 0, 1, 0.2, 1);\n    return `hsla(${h}, ${s}%, ${l}%, ${a})`;\n  }\n  return \"coral\";\n}\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport { getColorCustomOpacityFromHSLA } from \"../../utils/generalUtils\";\n\nfunction SelectorSet(props) {\n  const {\n    options,\n    gradient,\n    currentValue,\n    onValueChange,\n    spacing,\n    label,\n    color\n  } = props;\n\n  const getOptionBoxes = () => {\n    const { length } = options;\n    return options.map((option, index) => {\n      const opacity = gradient ? index / length : 1;\n\n      const { label, value, style = {} } = option;\n\n      const backgroundColorStyle = color\n        ? { backgroundColor: getColorCustomOpacityFromHSLA(color, opacity) }\n        : {};\n      const defaultStyle = {\n        ...backgroundColorStyle,\n        marginLeft: spacing,\n        marginRight: spacing\n      };\n\n      const selectedClass =\n        currentValue === value || (!currentValue && !index)\n          ? \"selectorSetOptionsActive\"\n          : \"\";\n      return (\n        <div\n          className={` ${selectedClass} animateColorChange`}\n          key={`${label}${index}`}\n          style={{ ...defaultStyle, ...style }}\n          onMouseUp={() => onValueChange(value)}\n        >\n          {label}\n        </div>\n      );\n    });\n  };\n\n  return (\n    <div className=\"selectorSetContainer\">\n      <div className=\"labelContainer\">\n        <Typography\n          id=\"how-many-lines\"\n          variant=\"h5\"\n          component=\"h2\"\n          fontSize={\"1px\"}\n        >\n          {label}\n        </Typography>\n      </div>\n      <div className=\"selectorSetOptionsContainer\">{getOptionBoxes()}</div>\n    </div>\n  );\n}\n\nexport default SelectorSet;\n","import React from \"react\";\nimport \"./Stage1.css\";\nimport SelectorSet from \"./stage1/SelectorSet\";\nimport theme from \"../theming/theme\";\n\nfunction Stage1(props) {\n  const { lineCount, lineColor, appMode } = props;\n\n  const onSelectedLineValueChange = value => {\n    window.localStorage.setItem(\"lineCount\", value);\n    lineCount.updater(value);\n  };\n  const onSelectedLineColorValueChange = value => {\n    window.localStorage.setItem(\"lineColor\", value);\n    lineColor.updater(value);\n  };\n  const onSelectedAppModeChange = value => {\n    window.localStorage.setItem(\"appMode\", value);\n    appMode.updater(value);\n  };\n  const sharedSelectStyle = {\n    paddingLeft: \"1em\",\n    paddingRight: \"1em\"\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"timelineOptionsContainer\">\n        <SelectorSet\n          gradient\n          label=\"MODE\"\n          color={theme.palette.neutral.main}\n          options={[\n            { label: \"View\", value: \"view\" },\n            { label: \"Edit\", value: \"edit\" }\n          ]}\n          currentValue={appMode.value}\n          onValueChange={onSelectedAppModeChange}\n        />\n        <SelectorSet\n          label=\"LINES\"\n          gradient\n          color={theme.palette.primary.main}\n          options={[\n            { label: 1, value: 1 },\n            { label: 2, value: 2 },\n            { label: 3, value: 3 },\n            { label: 4, value: 4 },\n            { label: 5, value: 5 }\n          ]}\n          currentValue={lineCount.value}\n          onValueChange={onSelectedLineValueChange}\n        />\n        <SelectorSet\n          label=\"COLOR\"\n          spacing={\"10px\"}\n          options={[\n            {\n              label: \"Red\",\n              value: theme.palette.tertiary.main,\n              style: {\n                backgroundColor: theme.palette.tertiary.main,\n                ...sharedSelectStyle,\n                marginLeft: 0\n              }\n            },\n            {\n              label: \"Blue\",\n              value: theme.palette.primary.main,\n              style: {\n                backgroundColor: theme.palette.primary.main,\n                ...sharedSelectStyle\n              }\n            },\n            {\n              label: \"Green\",\n              value: theme.palette.secondary.main,\n              style: {\n                backgroundColor: theme.palette.secondary.main,\n                ...sharedSelectStyle\n              }\n            }\n          ]}\n          currentValue={lineColor.value}\n          onValueChange={onSelectedLineColorValueChange}\n        />\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default Stage1;\n","const shapeNames = {\n  SQUARE: \"SQUARE\",\n  CORNER_UPPER_RIGHT: \"CORNER_UPPER_RIGHT\",\n  CORNER_LOWER_RIGHT: \"CORNER_LOWER_RIGHT\",\n  CORNER_UPPER_LEFT: \"CORNER_UPPER_LEFT\",\n  CORNER_LOWER_LEFT: \"CORNER_LOWER_LEFT\"\n};\n\nexport const shapeClasses = {\n  SQUARE: \"square\",\n  CORNER_UPPER_RIGHT: \"quarter-circle-upper-right\",\n  CORNER_LOWER_RIGHT: \"quarter-circle-lower-right\",\n  CORNER_UPPER_LEFT: \"quarter-circle-upper-left\",\n  CORNER_LOWER_LEFT: \"quarter-circle-lower-left\"\n};\n\nexport const Modes = {\n  EDIT_MODE: \"EDIT_MODE\",\n  IMAGE_MODE: \"IMAGE_MODE\",\n  VIEW_MODE: \"VIEW_MODE\"\n};\n\nexport default shapeNames;\n","import React from \"react\";\nimport \"./PieceBase.css\";\nimport shapeNames, { shapeClasses } from \"../../utils/sharedConstants\";\n\nfunction getFillStyle(color, image, shape) {\n  const backgroundImageStyle = image\n    ? {\n        backgroundImage: `url(${image})`,\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundPosition: \"center\"\n      }\n    : {};\n  return shape === shapeNames.SQUARE\n    ? {\n        backgroundColor: color,\n        ...backgroundImageStyle\n      }\n    : {\n        borderColor: color\n      };\n}\nfunction PieceBase(props) {\n  const {\n    shape,\n    style,\n    color,\n    onMouseOver,\n    isStaticPiece,\n    onMouseUp,\n    id,\n    innerTextBorderColor,\n    children,\n    textClassModifier = \"\",\n    innerTextContent,\n    onMouseOut,\n    onMouseEnter,\n    displayTextContent,\n    image\n  } = props;\n\n  const shapeClassName = isStaticPiece\n    ? `${shapeClasses[shape]}-static`\n    : shapeClasses[shape];\n  const textLocationClass = `${shapeClassName}-text${textClassModifier}`;\n  const textBorderClass = displayTextContent\n    ? `${shapeClassName}-text-border`\n    : \"\";\n  const innerTextLocationClass = `${shapeClassName}-inner-text${textClassModifier}`;\n\n  // Used to override css color (so we can have flat gradient across timeline)\n  const fillStyle = color ? getFillStyle(color, image, shape) : {};\n  const borderColorStyle = innerTextBorderColor\n    ? { borderColor: innerTextBorderColor }\n    : {};\n\n  return (\n    <div className=\"pieceContainer\">\n      <div\n        style={{ ...style, ...fillStyle }}\n        className={`${shapeClassName} animateColorChange\"`}\n        id={id}\n      >\n        {!isStaticPiece && (\n          <React.Fragment>\n            <div\n              className={`absolute-full ${innerTextLocationClass}`}\n              onMouseUp={onMouseUp}\n              onMouseOut={onMouseOut}\n              onMouseEnter={onMouseEnter}\n              onMouseOver={onMouseOver}\n            >\n              {innerTextContent}\n            </div>\n            <div\n              className={`timeLineBlockText ${textLocationClass} ${textBorderClass}`}\n              style={borderColorStyle}\n            >\n              {children}\n            </div>\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default PieceBase;\n","import React from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport { Modes } from \"../../utils/sharedConstants\";\n\nfunction PieceEditor({\n  shape,\n  image,\n  mode,\n  label,\n  content,\n  handleChangeEvent,\n  savedContent,\n  savedLabel,\n  savedImage\n}) {\n  console.log({ savedContent });\n  return (\n    <React.Fragment>\n      {mode.value === Modes.EDIT_MODE && (\n        <React.Fragment>\n          <TextField\n            autoFocus={true}\n            defaultValue={savedLabel.value}\n            style={{ marginTop: \"-.5em\" }}\n            placeholder=\"Enter Year or Label\"\n            id=\"label-entry\"\n            inputProps={{\n              maxLength: 20\n            }}\n            variant=\"outlined\"\n            onChange={handleChangeEvent(label.updater)}\n          />\n          <TextField\n            defaultValue={savedContent.value}\n            style={{ marginTop: \".5em\", marginBottom: \"-.5em\" }}\n            placeholder=\"Enter Text\"\n            id=\"content-entry\"\n            multiline\n            rows=\"4\"\n            inputProps={{\n              maxLength: 70\n            }}\n            variant=\"outlined\"\n            onChange={handleChangeEvent(content.updater)}\n          />\n        </React.Fragment>\n      )}\n      {mode.value !== Modes.EDIT_MODE && (\n        <TextField\n          autoFocus={true}\n          defaultValue={savedImage.value}\n          style={{ marginTop: \"-.5em\" }}\n          placeholder=\"Enter Image URL\"\n          id=\"image-url-entry\"\n          inputProps={{\n            maxLength: 1000\n          }}\n          variant=\"outlined\"\n          onChange={handleChangeEvent(image.updater)}\n        />\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default PieceEditor;\n","import React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { Done, Image, Edit } from \"@material-ui/icons/\";\nimport shapeNames, { Modes } from \"../../utils/sharedConstants\";\n\nfunction TimelinePieceButtons({ shape, mode, hoverText, onModeChange }) {\n  if (hoverText.value) {\n    return <div className=\"transparent\">{hoverText.value}</div>;\n  }\n  if (mode.value === Modes.EDIT_MODE) {\n    return (\n      <div className=\"hoverForFullOpacity animateColorChange\">\n        <IconButton onMouseUp={() => onModeChange(Modes.VIEW_MODE)}>\n          <Done />\n        </IconButton>\n        {shape === shapeNames.SQUARE && (\n          <IconButton onMouseUp={() => onModeChange(Modes.IMAGE_MODE)}>\n            <Image />\n          </IconButton>\n        )}\n      </div>\n    );\n  } else if (mode.value === Modes.IMAGE_MODE) {\n    return (\n      <IconButton onMouseUp={() => onModeChange(Modes.EDIT_MODE)}>\n        <Done />\n      </IconButton>\n    );\n  } else {\n    return (\n      <IconButton onMouseUp={() => onModeChange(Modes.EDIT_MODE)}>\n        <Edit />\n      </IconButton>\n    );\n  }\n}\n\nexport default TimelinePieceButtons;\n","import React, { useState } from \"react\";\nimport shapeNames, { Modes } from \"../../utils/sharedConstants\";\nimport PieceBase from \"./PieceBase\";\nimport PieceEditor from \"./PieceEditor\";\nimport TimelinePieceButtons from \"./TimelinePieceButtons\";\n\nfunction TimeLinePiece(props) {\n  const {\n    style = {},\n    shape = shapeNames.SQUARE,\n    textClassModifier,\n    color,\n    innerTextBorderColor,\n    appMode,\n    cellId,\n    defaultState = Modes.VIEW_MODE\n  } = props;\n\n  const [modeValue, setMode] = useState(defaultState);\n  const [savedContentValue, setSavedContent] = useState(\n    window.localStorage.getItem(`savedContent${cellId}`)\n  );\n  const [savedImageValue, setSavedImage] = useState(\n    window.localStorage.getItem(`savedImage${cellId}`)\n  );\n  const [savedLabelValue, setSavedLabel] = useState(\n    window.localStorage.getItem(`savedLabel${cellId}`)\n  );\n  const [contentValue, setContent] = useState(savedContentValue);\n  const [imageValue, setImage] = useState(savedImageValue);\n  const [labelValue, setLabel] = useState(savedLabelValue);\n  const [hoverText, setHoverText] = useState(); //can set to cellId for testing\n\n  function updateSavedValues() {\n    state.savedLabel.updater(state.label.value);\n    state.savedContent.updater(state.content.value);\n    state.savedImage.updater(state.image.value);\n\n    window.localStorage.setItem(`savedLabel${cellId}`, state.label.value);\n    window.localStorage.setItem(`savedContent${cellId}`, state.content.value);\n    window.localStorage.setItem(`savedImage${cellId}`, state.image.value);\n  }\n\n  const onModeChange = newMode => {\n    if (state.mode.value !== Modes.VIEW_MODE) {\n      updateSavedValues();\n    }\n    state.mode.updater(newMode);\n  };\n\n  const state = {\n    mode: { updater: setMode, value: modeValue },\n    content: { updater: setContent, value: contentValue },\n    label: { updater: setLabel, value: labelValue },\n    image: { updater: setImage, value: imageValue },\n    savedContent: { updater: setSavedContent, value: savedContentValue },\n    savedLabel: { updater: setSavedLabel, value: savedLabelValue },\n    savedImage: { updater: setSavedImage, value: savedImageValue },\n    hoverText: {\n      updater: setHoverText,\n      value: hoverText\n    }\n  };\n\n  const handleChangeEvent = updater => e => {\n    updater(e.target.value);\n  };\n\n  function getPieceChildContent() {\n    return state.mode.value === Modes.VIEW_MODE ? (\n      <React.Fragment>\n        <h3 style={{ wordBreak: \"break-all\" }}>{state.savedLabel.value}</h3>\n        <span style={{ wordBreak: \"break-all\" }}>\n          {state.savedContent.value}\n        </span>\n      </React.Fragment>\n    ) : (\n      <PieceEditor {...state} handleChangeEvent={handleChangeEvent} />\n    );\n  }\n\n  const shouldDisplayTextContent =\n    state.content.value ||\n    state.label.value ||\n    (appMode === \"edit\" && state.mode.value === Modes.EDIT_MODE);\n\n  return (\n    <React.Fragment>\n      <div style={{ position: \"relative\" }}>\n        <PieceBase\n          shape={shape}\n          style={{ ...style }}\n          color={color}\n          innerTextBorderColor={innerTextBorderColor}\n          image={state.savedImage.value}\n          textClassModifier={textClassModifier}\n          displayTextContent={shouldDisplayTextContent}\n          innerTextContent={\n            appMode === \"edit\" && (\n              <TimelinePieceButtons\n                shape={shape}\n                mode={state.mode}\n                hoverText={state.hoverText}\n                onModeChange={onModeChange}\n              />\n            )\n          }\n        >\n          {getPieceChildContent()}\n        </PieceBase>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default TimeLinePiece;\n","import React from \"react\";\nimport TimelinePiece from \"./TimelinePiece\";\nimport shapeNames from \"../../utils/sharedConstants\";\n\nfunction LeftPiece(props) {\n  const { index, lineCount } = props;\n\n  const uncurved = <TimelinePiece {...props} />;\n  const upperCurve = (\n    <TimelinePiece shape={shapeNames.CORNER_UPPER_LEFT} {...props} />\n  );\n  const lowerCurve = (\n    <TimelinePiece shape={shapeNames.CORNER_LOWER_LEFT} {...props} />\n  );\n\n  if (index === 0) {\n    return uncurved;\n  }\n  if (index % 2) {\n    return index === lineCount - 1 ? uncurved : upperCurve;\n  } else {\n    return lowerCurve;\n  }\n}\n\nexport default LeftPiece;\n","import React from \"react\";\nimport TimelinePiece from \"./TimelinePiece\";\nimport shapeNames from \"../../utils/sharedConstants\";\n\nfunction RightPiece(props) {\n  const { index, lineCount } = props;\n\n  const uncurvedTextBelow = (\n    <TimelinePiece textClassModifier=\"-below\" {...props} />\n  );\n  const upperCurve = (\n    <TimelinePiece shape={shapeNames.CORNER_UPPER_RIGHT} {...props} />\n  );\n  const lowerCurve = (\n    <TimelinePiece shape={shapeNames.CORNER_LOWER_RIGHT} {...props} />\n  );\n\n  if (index === lineCount - 1) {\n    return lineCount % 2 ? uncurvedTextBelow : lowerCurve;\n  }\n  if (index % 2) {\n    return lowerCurve;\n  } else {\n    return upperCurve;\n  }\n}\n\nexport default RightPiece;\n","import React from \"react\";\nimport TimelinePiece from \"./TimelinePiece\";\nimport {\n  mapNumericValueToRange,\n  getColorCustomOpacityFromHSLA\n} from \"../../utils/generalUtils\";\nimport LeftPiece from \"./LeftPiece\";\nimport RightPiece from \"./RightPiece\";\n\nfunction TimeLine(props) {\n  const { lineCount, lineColor, appMode } = props;\n\n  let lines = [];\n\n  const cellsPerLine = 5;\n  const totalCells = lineCount * cellsPerLine;\n\n  for (let i = 0; i < lineCount; i++) {\n    const cells = [];\n    for (let j = 0; j < cellsPerLine; j++) {\n      const cellNum =\n        i % 2\n          ? i * cellsPerLine + (cellsPerLine - j)\n          : i * cellsPerLine + j + 1;\n\n      let opacity = cellNum / totalCells;\n      opacity = mapNumericValueToRange(opacity, 0, 1, 0.3, 1);\n      const color = getColorCustomOpacityFromHSLA(lineColor, opacity);\n\n      const pieceProps = {\n        index: i,\n        lineCount,\n        cellId: cellNum,\n        opacity,\n        color,\n        appMode,\n        innerTextBorderColor: lineColor\n      };\n\n      let element = <TimelinePiece {...pieceProps} />;\n\n      if (j === 0) {\n        element = <LeftPiece {...pieceProps} />;\n      } else if (j === 4) {\n        element = <RightPiece {...pieceProps} />;\n      }\n      cells.push(\n        <React.Fragment key={`TIMELINE_CELL_${i + j}`}>\n          {element}\n        </React.Fragment>\n      );\n    }\n    lines.push(\n      <React.Fragment key={`TIMELINE_CENTER_${i}`}>\n        <div className=\"flex-container\">{cells}</div>\n      </React.Fragment>\n    );\n  }\n  return <div className=\"timeLineCenter\">{lines}</div>;\n}\n\nexport default TimeLine;\n","import React from \"react\";\nimport \"./Stage2.css\";\nimport TimeLine from \"./stage2/TimeLine\";\n\nfunction Stage2(props) {\n  const { lineCount = {}, lineColor = {}, appMode = {} } = props;\n\n  return (\n    <React.Fragment>\n      <div className=\"flex-container margin-auto\">\n        <TimeLine\n          lineCount={lineCount.value}\n          lineColor={lineColor.value}\n          appMode={appMode.value}\n        />\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default Stage2;\n","import React, { useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport theme from \"./theming/theme\";\nimport Stage1 from \"./components/Stage1\";\nimport Stage2 from \"./components/Stage2\";\n\nfunction App() {\n  const [stage, setStage] = useState(1);\n  const [lineCount, setLineCount] = useState(\n    parseInt(window.localStorage.getItem(\"lineCount\") || 3)\n  );\n  const [lineColor, setlineColor] = useState(\n    window.localStorage.getItem(\"lineColor\") || theme.palette.primary.main\n  );\n  const [appMode, setAppMode] = useState(\n    window.localStorage.getItem(\"appMode\") || \"edit\"\n  );\n\n  const state = {\n    stage: { updater: setStage, value: stage },\n    lineCount: { updater: setLineCount, value: lineCount },\n    lineColor: { updater: setlineColor, value: lineColor },\n    appMode: { updater: setAppMode, value: appMode }\n  };\n\n  const headerLogoClass = `App-main-logo ${\n    state.stage.value !== 1 ? \"pointer\" : \"\"\n  }`;\n\n  return (\n    <ThemeProvider theme={theme}>\n      <React.Fragment>\n        <CssBaseline />\n        <div className=\"App\">\n          <header className=\"App-main-header\" onMouseUp={() => setStage(1)}>\n            <img src={logo} className={headerLogoClass} alt=\"logo\" />\n          </header>\n          <div className=\"AppContent\">\n            <Stage1 {...state} />\n            <Stage2 {...state} />\n            {state.lineCount.value > 2 && <Stage1 {...state} />}\n          </div>\n        </div>\n      </React.Fragment>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}